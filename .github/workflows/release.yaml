name: New Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [10.x]
        python-version: [3.8]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get yarn
        run: npm install -g yarn

      - name: Install dependancies
        run: yarn install

      - name: Get Codecov
        run: yarn global add codecov

      - name: Get yarn global bin directory
        id: yarn-bin
        run: echo "::set-output name=dir::$(yarn global bin)"

      - name: Run tests & codecov
        run: yarn test && ${{ steps.yarn-bin.outputs.dir }}/codecov

      - name: Codecov upload
        uses: codecov/codecov-action@v1

      - name: Build docs
        run: yarn docs
          
  deploy:
    needs: test

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get yarn
        run: npm install -g yarn

      - id: Publish package to npm
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
